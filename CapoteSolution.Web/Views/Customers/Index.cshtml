@using CapoteSolution.Web.Paginations
@model PaginatedList<CapoteSolution.Web.Models.ViewModels.CustomerDisplayVM>

@{
    ViewData["Title"] = "Gestión de Clientes";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="Create" class="btn btn-success">Nuevo</a>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Nombre</th>
                <th>Contrato</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.CustomerName</td>
                    <td>@item.HasContract</td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-key="@item.Id" class="btn btn-sm btn-primary">Editar</a>
                            <a asp-action="DetailByCopiers" asp-route-key="@item.Id" class="btn btn-sm btn-info">Detalles</a>
                            <a asp-action="Delete" asp-route-key="@item.Id" class="btn btn-sm btn-danger">Eliminar</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@await Html.PartialAsync("_Pagination", Model)