// <auto-generated />
using System;
using CapoteSolution.Models.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapoteSolution.Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250718154035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapoteSolution.Models.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Copier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Brand_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChargeExtra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Customer_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Extra_BW")
                        .HasColumnType("int");

                    b.Property<int>("Extra_Color")
                        .HasColumnType("int");

                    b.Property<string>("IP_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MachineModel_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Machine_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monthly_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Plan_BW")
                        .HasColumnType("int");

                    b.Property<int>("Plan_Color")
                        .HasColumnType("int");

                    b.Property<string>("SN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Brand_FK");

                    b.HasIndex("MachineModel_FK");

                    b.ToTable("Copiers");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Copier_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Copier_FK")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.MachineModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Brand_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Toner_FK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Brand_FK");

                    b.HasIndex("Toner_FK");

                    b.ToTable("MachineModels");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BlackCounter")
                        .HasColumnType("int");

                    b.Property<string>("BlackTonerQty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorCounter")
                        .HasColumnType("int");

                    b.Property<Guid>("Copier_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServiceReason_FK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tech")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Copier_FK");

                    b.HasIndex("ServiceReason_FK");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.ServiceReason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VisitReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceReasons");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Toner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TonerModel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TonerYield")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Toners");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Copier", b =>
                {
                    b.HasOne("CapoteSolution.Models.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("Brand_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapoteSolution.Models.Entities.MachineModel", "MachineModel")
                        .WithMany()
                        .HasForeignKey("MachineModel_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("MachineModel");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Customer", b =>
                {
                    b.HasOne("CapoteSolution.Models.Entities.Copier", "Copier")
                        .WithOne("Customer")
                        .HasForeignKey("CapoteSolution.Models.Entities.Customer", "Copier_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Copier");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.MachineModel", b =>
                {
                    b.HasOne("CapoteSolution.Models.Entities.Brand", "Brand")
                        .WithMany("MachineModels")
                        .HasForeignKey("Brand_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CapoteSolution.Models.Entities.Toner", "Toner")
                        .WithMany("MachineModels")
                        .HasForeignKey("Toner_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Toner");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Service", b =>
                {
                    b.HasOne("CapoteSolution.Models.Entities.Copier", "Copier")
                        .WithMany("Services")
                        .HasForeignKey("Copier_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapoteSolution.Models.Entities.ServiceReason", "ServiceReason")
                        .WithMany("Services")
                        .HasForeignKey("ServiceReason_FK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Copier");

                    b.Navigation("ServiceReason");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Brand", b =>
                {
                    b.Navigation("MachineModels");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Copier", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.ServiceReason", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("CapoteSolution.Models.Entities.Toner", b =>
                {
                    b.Navigation("MachineModels");
                });
#pragma warning restore 612, 618
        }
    }
}
